version: '3.8'

services:
  # Основное веб-приложение
  web:
    build: .
    ports:
      - "5000:5000"
    env_file: .env
    depends_on:
      - db
      - redis
      - celery
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # База данных PostgreSQL
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  # Redis для кэширования и очередей
  redis:
    image: redis:6-alpine
    volumes:
      - redis_data:/data

  # Celery для асинхронных задач
  celery:
    build: .
    command: celery -A app.celery worker --loglevel=info
    env_file: .env
    depends_on:
      - redis

  # Nginx как обратный прокси
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

# Постоянные тома для данных
volumes:
  postgres_data:
  redis_data: 